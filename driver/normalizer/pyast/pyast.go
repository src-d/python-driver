// Package pyast defines constants from Python 2 and 3 AST.
package pyast

// GENERATED BY python-driver/native/gogen/gogen.py
// DO NOT EDIT

// Python 2+3 AST node types.
// This includes all classes extending from _ast.AST for both Python 2 and 3.
// See:
// https://docs.python.org/3.6/library/ast.html#abstract-grammar
// https://docs.python.org/2.7/library/ast.html#abstract-grammar

const (
	Add              = "Add"
	And              = "And"
	AnnAssign        = "AnnAssign"
	Assert           = "Assert"
	Assign           = "Assign"
	AsyncFor         = "AsyncFor"
	AsyncFunctionDef = "AsyncFunctionDef"
	AsyncWith        = "AsyncWith"
	Attribute        = "Attribute"
	AugAssign        = "AugAssign"
	AugLoad          = "AugLoad"
	AugStore         = "AugStore"
	Await            = "Await"
	BinOp            = "BinOp"
	BitAnd           = "BitAnd"
	BitOr            = "BitOr"
	BitXor           = "BitXor"
	BoolLiteral      = "BoolLiteral"
	BoolOp           = "BoolOp"
	Break            = "Break"
	ByteLiteral      = "ByteLiteral"
	Bytes            = "Bytes"
	Call             = "Call"
	ClassDef         = "ClassDef"
	Compare          = "Compare"
	Constant         = "Constant"
	Continue         = "Continue"
	Del              = "Del"
	Delete           = "Delete"
	Dict             = "Dict"
	DictComp         = "DictComp"
	Div              = "Div"
	Ellipsis         = "Ellipsis"
	Eq               = "Eq"
	ExceptHandler    = "ExceptHandler"
	Exec             = "Exec"
	Expr             = "Expr"
	Expression       = "Expression"
	ExtSlice         = "ExtSlice"
	FloorDiv         = "FloorDiv"
	For              = "For"
	FormattedValue   = "FormattedValue"
	FunctionDef      = "FunctionDef"
	GeneratorExp     = "GeneratorExp"
	Global           = "Global"
	Gt               = "Gt"
	GtE              = "GtE"
	If               = "If"
	IfExp            = "IfExp"
	Import           = "Import"
	ImportFrom       = "ImportFrom"
	In               = "In"
	Index            = "Index"
	Interactive      = "Interactive"
	Invert           = "Invert"
	Is               = "Is"
	IsNot            = "IsNot"
	JoinedStr        = "JoinedStr"
	LShift           = "LShift"
	Lambda           = "Lambda"
	List             = "List"
	ListComp         = "ListComp"
	Load             = "Load"
	Lt               = "Lt"
	LtE              = "LtE"
	MatMult          = "MatMult"
	Mod              = "Mod"
	Module           = "Module"
	Mult             = "Mult"
	Name             = "Name"
	NameConstant     = "NameConstant"
	NoneLiteral      = "NoneLiteral"
	Nonlocal         = "Nonlocal"
	NoopLine         = "NoopLine"
	Not              = "Not"
	NotEq            = "NotEq"
	NotIn            = "NotIn"
	Num              = "Num"
	NumLiteral       = "NumLiteral"
	Or               = "Or"
	Param            = "Param"
	Pass             = "Pass"
	Pow              = "Pow"
	PreviousNoops    = "PreviousNoops"
	Print            = "Print"
	RShift           = "RShift"
	Raise            = "Raise"
	RemainderNoops   = "RemainderNoops"
	Repr             = "Repr"
	Return           = "Return"
	SameLineNoops    = "SameLineNoops"
	Set              = "Set"
	SetComp          = "SetComp"
	Slice            = "Slice"
	Starred          = "Starred"
	Store            = "Store"
	Str              = "Str"
	StringLiteral    = "StringLiteral"
	Sub              = "Sub"
	Subscript        = "Subscript"
	Suite            = "Suite"
	Try              = "Try"
	TryExcept        = "TryExcept"
	TryFinally       = "TryFinally"
	Tuple            = "Tuple"
	UAdd             = "UAdd"
	USub             = "USub"
	UnaryOp          = "UnaryOp"
	While            = "While"
	With             = "With"
	Yield            = "Yield"
	YieldFrom        = "YieldFrom"
	alias            = "alias"
	arg              = "arg"
	arguments        = "arguments"
	boolop           = "boolop"
	cmpop            = "cmpop"
	comprehension    = "comprehension"
	excepthandler    = "excepthandler"
	expr             = "expr"
	expr_context     = "expr_context"
	keyword          = "keyword"
	mod              = "mod"
	noop_line        = "noop_line"
	operator         = "operator"
	slice            = "slice"
	stmt             = "stmt"
	unaryop          = "unaryop"
	withitem         = "withitem"
)

